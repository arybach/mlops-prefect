# Create new dir for web project
mkdir web
sudo chmod 777 web
cd web
# in the statter.ipynb - get version from 
!pip freeze | grep scikit-learn
or:
import sklearn
print(sklearn.__version__)

# then in terminal
pipenv install scikit-learn==1.2.2 flask --python=3.9
pipenv uninstall scikit-learn flask

copy model from ../jupyter/models to current folder - web

## Output:
[ec2-user@ip-10-20-0-150 web]$ pipenv install scikit-learn==1.2.2 fastapi --python=3.9
Installing scikit-learn==1.2.2...
Resolving scikit-learn==1.2.2...
Adding scikit-learn to Pipfile's [packages] ...
✔ Installation Succeeded
Installing fastapi...
Resolving fastapi...
Adding fastapi to Pipfile's [packages] ...
✔ Installation Succeeded
Pipfile.lock not found, creating...
Locking [packages] dependencies...
Building requirements...
Resolving dependencies...
✔ Success!
Locking [dev-packages] dependencies...
Updated Pipfile.lock (0224248dbd2e62d99199febd5547d011b176ae79ec532390419d7c2ecef1a25a)!
Installing dependencies from Pipfile.lock (f1a25a)...
To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.

## Run pipenv shell
[ec2-user@ip-10-20-0-150 web]$ pipenv shell
Launching subshell in virtual environment...
[ec2-user@ip-10-20-0-150 web]$  . /home/ec2-user/.local/share/virtualenvs/web-S16fHbXv/bin/activate
(web) [ec2-user@ip-10-20-0-150 web]$ 

python3 predict.py
then in separate terminal:
python3 test.py

# to use gunicorn
pipenv install gunicorn

# output:
(web) [ec2-user@ip-10-20-0-150 web]$ pipenv install gunicorn
Installing gunicorn...
Resolving gunicorn...
Adding gunicorn to Pipfile's [packages] ...
✔ Installation Succeeded
Pipfile.lock (bbfcb0) out of date, updating to (ceb1c5)...
Locking [packages] dependencies...
Building requirements...
Resolving dependencies...
✔ Success!
Locking [dev-packages] dependencies...
Updated Pipfile.lock (46c407b9222f59a5319b31b71d1266ccfe8af2b0519311f7ab2f51ee47ceb1c5)!
Installing dependencies from Pipfile.lock (ceb1c5)...

gunicorn --bind=0.0.0.0:9696 predict:app
# output
(web) [ec2-user@ip-10-20-0-150 web]$ gunicorn --bind=0.0.0.0:9696 predict:app
[2023-06-17 10:03:27 +0000] [227662] [INFO] Starting gunicorn 20.1.0
[2023-06-17 10:03:27 +0000] [227662] [INFO] Listening at: http://0.0.0.0:9696 (227662)
[2023-06-17 10:03:27 +0000] [227662] [INFO] Using worker: sync
[2023-06-17 10:03:27 +0000] [227663] [INFO] Booting worker with pid: 227663

# to install only as a development dependency
pipenv install --dev requests

# output:
[ec2-user@ip-10-20-0-150 web]$ pipenv install --dev requests
Installing requests...
Resolving requests...
Adding requests to Pipfile's [dev-packages] ...
✔ Installation Succeeded
Pipfile.lock (ceb1c5) out of date, updating to (0a0920)...
Locking [packages] dependencies...
Building requirements...
Resolving dependencies...
✔ Success!
Locking [dev-packages] dependencies...
Building requirements...
Resolving dependencies...
✔ Success!
Updated Pipfile.lock (587321bdd7accdb200c70ec4cc79a04ed5a011bd3a8b2c14b941c407ee0a0920)!
Installing dependencies from Pipfile.lock (0a0920)...
Installing dependencies from Pipfile.lock (0a0920)...
To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.

# docker
docker build -t ride-duration-predict:v1 .
docker run -ti --rm -p 9696:9696 ride-duration-predict:v1

docker login
docker tag ride-duration-predict:v1 arybach/ride-duration-predict:v1
docker push arybach/ride-duration-predict:v1
